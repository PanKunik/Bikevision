@model bikevision.Models.ProductDetailsViewModel

@using System;
@using System.IO;
@using bikevision.Models;

@{

    ViewBag.Title = Model.product.name;
    Layout = "~/Views/Shared/_ShopLayout.cshtml";

    string classes = "btn btn-primary";

    if (Model.product.availability <= 0)
    {
        classes += " disabled";
    }

    string modelVariant = "";

    if (Session["productModel"] != null)
    {
        modelVariant = (string)(Session["productModel"]);
    }
    else
    {
        //modelVariant = "main";
    }

    List<string> variants = new List<string>();

    string[] directories = Directory.GetDirectories(Server.MapPath("~/Content/Images/Products/" + Model.product.idItem + "/"));

    List<string> images = new List<string>();

    foreach(var path in directories)
    {
        string[] fil = Directory.GetFiles(path + "/");

        foreach (var f in fil)
        {
            if (f.Contains(modelVariant))
            {
                images = images.Append(f.Replace(Server.MapPath("~/Content/"),"../../Content/")).ToList();
            }

            variants = variants.Append(f.Replace(Server.MapPath("~/Content/Images\\Products\\" + Model.product.idItem + "\\"),"").Replace("/1.jpg","").Replace(" ", "_").ToLower()).ToList();
        }
    }
    

    List<int> compareItemsIds = new List<int>();

    if(Session["comparation"] != null)
    {
        compareItemsIds = ((List<Item>)(Session["comparation"])).Select(id => id.idItem).ToList();
    }
}

<div class="container-fluid pt-4 m-0">
    <div class="d-flex flex-column container">
        <h2> @Model.product.name </h2>
        <div class="d-flex flex-lg-row flex-column">
            <div class="d-flex flex-column product-left-column">
                <img src="@images.First()" class="product__main-image" alt="mainimg" />

                <div class="d-flex flex-row flex-wrap">
                    @foreach (var img in images)
                    {
                        if (img == images.First())
                        {
                            <img src="@img" class="product__sub-image product__sub-image--active" alt="subimg" />
                        }
                        else
                        {
                            <img src="@img" class="product__sub-image" alt="subimg" />
                        }
                    }
                    @*<img src="~/Content/Images/Shop/siodelko_2.jpg" class="product__sub-image" alt="subimg" />*@
                </div>
            </div>
            <div class="d-flex flex-column fill-even product-right-column">
                @using (Html.BeginForm("OrderNow", "ShoppingCart", new { id = Model.product.idItem, option = modelVariant }, FormMethod.Post))
                {
                    if (Model.product.discount > 0)
                    {
                        <div class="d-flex flex-row">
                            <div class="product__badge-discount bg-dark text-white align-self-center"> @String.Format("-{0}%", Model.product.discount) </div>
                            <div class="text-muted product__old-price align-self-center"> @String.Format("{0:F2} zł", Model.product.price) </div>
                        </div>
                    }
                    <span class="text-size-big text-primary product__actual-price" value="@(String.Format("{0:F2}", ((Model.product.price) - ((Model.product.price * Model.product.discount) / 100.0M))).Replace(",","."))">
                        @String.Format("{0:F2} zł", ((Model.product.price) - ((Model.product.price * Model.product.discount) / 100)))
                    </span>
                    <div class="d-flex flex-column mb-2">
                        @foreach (var featureList in Model.FeaturesList)
                        {
                            if (featureList.Item3)
                            {
                                <div class="d-flex flex-row">
                                    <div class="d-flex flex-column mr-3">
                                        @Html.Hidden(featureList.Item1)
                                        <span class="product__option">@featureList.Item1:</span>
                                    </div>

                                    <div class="d-flex flex-row mr-1 flex-wrap">
                                        @foreach (var val in featureList.Item2)
                                        {
                                            if (featureList.Item1 == "Kolor")
                                            {
                                                if (val.ToLower() == modelVariant.Replace(Model.product.idItem + "_", "").Replace("_", " ").ToLower())
                                                {
                                                    <div name="@featureList.Item1" value="@val" class="product__option-choice-size product__option-choice-size--active">@val</div>
                                                }
                                                else
                                                {
                                                    <a href="@Url.Action("Product", "Shop", new { id = Model.product.idItem, model = variants.Where(i => i.Replace(Model.product.idItem + "_", "").Replace("_", " ").ToLower().Equals(val.ToLower())).First() })">
                                                        <div name="@featureList.Item1" value="@val" class="product__option-choice-size">@val</div>
                                                    </a>
                                                }
                                            }
                                            else
                                            {
                                                if (val == featureList.Item2.First())
                                                {
                                                    <div name="@featureList.Item1" value="@val" class="product__option-choice-size product__option-choice-size--active">@val</div>
                                                }
                                                else
                                                {
                                                    <div name="@featureList.Item1" value="@val" class="product__option-choice-size">@val</div>
                                                }
                                            }
                                        }
                                    </div>
                                </div>
                            }
                        }
                    </div>

                    <hr class="w-100 text-primary" />

                    <div class="d-flex flex-column flex-md-row flex-lg-column justify-content-between">
                        @if (Model.product.availability > 0)
                        {
                            <div class="d-flex fill-even justify-content-between mb-3">
                                <span class="product__option">Dostępność: </span>
                                @if (Model.product.availability == 1)
                                {
                                    <span class="product__option product__option--orange-text">W magazynie (@Model.product.availability sztuka)</span>
                                }
                                @if (Model.product.availability > 1)
                                {
                                    <span class="product__option product__option--green-text">W magazynie (@Model.product.availability sztuk)</span>
                                }
                            </div>
                            <div class="d-flex fill-even justify-content-between justify-content-md-end justify-content-lg-between mb-3">
                                <span class="product__option">Ilość: </span>

                                <select id="itemQuantity" name="itemQuantity" class="">
                                    @for (int i = 1; i <= Model.product.availability; i++)
                                    {
                                        <option value="@i">@i szt.</option>
                                    }
                                </select>
                                @Html.HiddenFor(model => model.HiddenQuantity)
                            </div>
                        }
                        else
                        {
                            <div class="d-flex fill-even justify-content-end mb-3">
                                <p class="product__option product__option--red-text">Produkt niedostępny</p>
                            </div>
                        }
                    </div>

                    <div class="d-flex flex-column flex-md-row flex-lg-column justify-content-between">
                        <div class="d-flex flex-row fill-even mb-3 justify-content-between align-self-auto align-self-md-end align-self-lg-auto">
                            <p class="product__option">Cena: <span class="product__final-price">@String.Format("{0:F2} zł", Model.product.price * ((100.0M - Model.product.discount) / 100.0M))</span></p>

                        </div>
                    </div>
                    <input type="submit" value="Do koszyka" @if (Model.product.availability <= 0) { @String.Format(" disabled ") ; } class="btn btn-primary @if (Model.product.availability <= 0) { @String.Format(" disabled"); }" />
                }

                @if (compareItemsIds.Count() > 0)
                {
                    if (compareItemsIds.Contains(Model.product.idItem))
                    {
                        using (Html.BeginForm("RemoveFromComparation", "Shop", new { itemId = Model.product.idItem, returnUrl = Request.Url }))
                        {
                            <label for="compare"><input id="compareItem" onchange="form.submit();" value="true" type="checkbox" checked /> Porównaj</label>
                        }
                    }
                    else
                    {
                        using (Html.BeginForm("AddToComparation", "Shop", new { itemId = Model.product.idItem, returnUrl = Request.Url }))
                        {
                            <label for="compare"><input id="compareItem" onchange="form.submit();" value="true" type="checkbox" /> Porównaj</label>
                        }
                    }
                }
                else
                {
                    using (Html.BeginForm("AddToComparation", "Shop", new { itemId = Model.product.idItem, returnUrl = Request.Url }))
                    {
                        <label for="compare"><input id="compareItem" onchange="form.submit();" value="true" type="checkbox" /> Porównaj</label>
                    }
                }
            </div>
        </div>
    </div>


    <div class="container-fluid d-none d-lg-block py-3 mt-3 bg-semi-light">
        <div class="container">
            <ul class="nav product__menu" id="productDetails" role="tablist">
                <li class="nav-item">
                    <a class="nav-link" id="details-tab" data-toggle="tab" href="#details" role="tab" aria-controls="details" aria-selected="true">Opis</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="specification-tab" data-toggle="tab" href="#specification" role="tab" aria-controls="specification" aria-selected="false">Specyfikacja</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="opinions-tab" data-toggle="tab" href="#opinions" role="tab" aria-controls="opinions" aria-selected="false">Opinie</a>
                </li>
            </ul>
        </div>
    </div>

    <div class="container mb-3">
        <div class="tab-content" id="productDetailsContent">
            <div class="product__menu-card" data-id="details"> Opis <i class="fas fa-chevron-down rotate"></i></div>
            <div class="tab-pane fade py-2" id="details" role="tabpanel" aria-labelledby="details-tab">
                @Model.product.description
            </div>
            <div class="product__menu-card" data-id="specification"> Specyfikacja <i class="fas fa-chevron-down rotate"></i></div>
            <div class="tab-pane fade py-2" id="specification" role="tabpanel" aria-labelledby="specification-tab">
                <table class="table table-striped">
                    <tbody>
                        <tr>
                            <td>
                                Nazwa:
                            </td>
                            <td>
                                @Model.product.name
                            </td>
                        </tr>
                        <tr>
                            <td>
                                Marka:
                            </td>
                            <td>
                                @Model.product.Brand.brand1
                            </td>
                        </tr>
                        <tr>
                            <td>
                                Kategoria:
                            </td>
                            <td>
                                @Model.product.Category.category1
                            </td>
                        </tr>
                        @foreach (var i in Model.FeaturesList)
                        {
                            <tr>
                                <td scope="row">
                                    @i.Item1
                                </td>
                                <td>
                                    @foreach (var it in i.Item2)
                                    {
                                        if (it == i.Item2.First())
                                        {
                                            <span>@it</span>
                                        }
                                        else
                                        {
                                            <span>, @it</span>
                                        }
                                    }
                                </td>
                            </tr>
                        }
                        <tr>
                            <td>
                                Typ:
                            </td>
                            <td>
                                @Model.product.ItemType.type
                            </td>
                        </tr>
                        <tr>
                            <td>
                                Waga:
                            </td>
                            <td>
                                @Model.product.weight
                            </td>
                        </tr>
                        <tr>
                            <td>
                                Wymiary:
                            </td>
                            <td>
                                @Model.product.dimensions
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="product__menu-card" data-id="opinions"> Opinie <i class="fas fa-chevron-down rotate"></i></div>
            <div class="tab-pane fade py-2" id="opinions" role="tabpanel" aria-labelledby="opinions-tab">
                @if (User.Identity.IsAuthenticated && Model.isEligibleToAddOpinion)
                {
                    using (Html.BeginForm("OpinionToOrder", "Shop", new { idProduct = Model.product.idItem }))
                    {
                        <select name="points" id="points" class="form-control">
                            <option value="" selected>Wybierz ocenę</option>
                            @for (int i = 1; i <= 5; i++)
                            {
                                <option value="@i">@i</option>
                            }
                        </select>
                        @Html.TextArea("opinion", new { @class = " form-control" })
                        <input type="submit" class="btn btn-primary btn-sm my-2" value="Wyślij opinię" />
                    }
                }
                @if (Model.opinions.Count() > 0)
                {
                    foreach (var opinion in Model.opinions)
                    {
                        <div class="col py-2 my-2 border border-dark text-dark">
                            <div class="row p-0 m-0">
                                <div class="col-1 font-weight-bold text-right">Ocena:</div>
                                <div class="col-1">@opinion.points/5</div>
                                <div class="col-1 font-weight-bold text-right">Autor:</div>
                                <div class="col-1">@opinion.Customer.name</div>
                                <div class="col-1 font-weight-bold text-right">Data:</div>
                                <div class="col-3">@opinion.date</div>
                            </div>

                            <hr />

                            <div class="row p-0 m-0">
                                <div class="col-12 font-weight-bold">
                                    Treść:
                                </div>
                                <div class="col-12">
                                    @opinion.opinion1
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p class="text-primary h5 text-center"> Produkt jeszcze nie ma opinii. </p>
                }
            </div>
        </div>
    </div>
</div>

@section scripts
{
    @Scripts.Render("~/Scripts/Shop/product-accortion-tabs.js")
}