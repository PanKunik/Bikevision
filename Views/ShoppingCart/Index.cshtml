@using bikevision.Models;

@using System;
@using System.IO;

@{
    ViewBag.Title = "Koszyk";
    Layout = "~/Views/Shared/_ShopLayout.cshtml";

    List<Shipping> shippings = new List<Shipping>();

    if (ViewBag.Shippings != null)
    {
        shippings = (List<Shipping>)ViewBag.Shippings;
    }

    byte customerDiscount = 0;

    if (Session["customerDiscount"] != null)
    {
        customerDiscount = (byte)Session["customerDiscount"];
    }
}

<section class="container py-5 text-primary">
    <nav class="px-0" aria-label="breadcrumb">
        <ol class="breadcrumb px-0">
            <li class="breadcrumb-item"><a href="#">Home</a></li>
            <li class="breadcrumb-item"><a href="#">Shop</a></li>
            <li class="breadcrumb-item active" aria-current="page">Kategoria</li>
        </ol>
    </nav>

    @if (Session["Cart"] != null)
    {
        List<Cart> temp = (List<Cart>)Session["Cart"];
        var total = 0.0M;// temp.Sum(x => x.Quantity * ((x.Item.price) - ((x.Item.price * x.Item.discount) / 100)));
        Shipping deliveryCost;
        var promotionCode = 0.0M;

        List<Tuple<int, int>> pairForCodes = null;

        if (Session["Items"] != null)
        {
            pairForCodes = (List<Tuple<int, int>>)Session["Items"];
        }

        if (ViewBag.costOfDelivery != null)
        {
            deliveryCost = new Shipping();
            deliveryCost = (Shipping)ViewBag.costOfDelivery;
        }
        else
        {
            deliveryCost = new Shipping();
            deliveryCost.cost = 0;
        }

        <h2 class="px-0"> Twój koszyk </h2>

        <p class="text-danger">@ViewBag.QuantityError</p>

        <table class="table table-striped text-primary vertical-align">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">
                        Produkt
                    </th>
                    <th scope="col">
                        Nazwa
                    </th>
                    <th scope="col">
                        Cena
                    </th>
                    <th class="text-center" scope="col">
                        Ilość
                    </th>
                    <th scope="col">
                        Razem
                    </th>
                    <th class="text-center" scope="col">
                        Usuń
                    </th>
                </tr>
            </thead>

            <tbody>
                @foreach (var productInCart in (List<Cart>)Session["Cart"])
                {
                    total += (productInCart.Quantity * (productInCart.Item.price * ((100.0M - (decimal)productInCart.Item.discount) / 100.0M)));


                    List<string> colorModel = productInCart.Options.Split(';').ToList();

                    foreach (var str in colorModel)
                    {
                        if (str.Contains("Kolor"))
                        {
                            colorModel = str.Split(':').ToList();
                            break;
                        }
                    }

                    string colorM = colorModel.Last();

                    if (pairForCodes != null)
                    {
                        List<Tuple<int, int>> pairs = pairForCodes.Where(i => i.Item1 == productInCart.Item.idItem).ToList();

                        if (pairs.Count() > 0)
                        {
                            decimal priceOnDiscount = productInCart.Quantity * (productInCart.Item.price * ((100.0M - (decimal)productInCart.Item.discount)/100.0M));

                            promotionCode -= ((productInCart.Quantity * priceOnDiscount) - ((productInCart.Quantity * priceOnDiscount * (100.0M - (decimal)pairs.First().Item2 - (decimal)customerDiscount) / 100.0M)));
                        }

                    }
                    else if (customerDiscount > 0)
                    {
                        decimal priceOnDiscount = productInCart.Quantity * (productInCart.Item.price * ((100.0M - (decimal)productInCart.Item.discount)/100.0M));

                        promotionCode -= ((productInCart.Quantity * priceOnDiscount) - ((productInCart.Quantity * priceOnDiscount * (100.0M - (decimal)customerDiscount) / 100.0M)));
                    }

                    //promotionCode += ((productInCart.Quantity * productInCart.Item.price) - (productInCart.Quantity * productInCart.Item.price) * (1 / productInCart.Multiplier));
                    //total += (productInCart.Quantity * productInCart.Item.price);
                    <tr>
                        <td scope="row">
                            <a href="@Url.Action("Product", "Shop", new { id = productInCart.Item.idItem, model = (productInCart.Item.idItem + "_" + colorM.ToLower()) })">
                                <img src="@(String.Format("../../Content/Images/Products/{0}/{1}_{2}/1.jpg", productInCart.Item.idItem, productInCart.Item.idItem, colorM.ToLower()))" class="shopping-cart__product-image" alt="obrazek" />
                            </a>
                        </td>
                        <td>
                            <a href="@Url.Action("Product", "Shop", new { id = productInCart.Item.idItem, model = (productInCart.Item.idItem + "_" + colorM.ToLower()) })">
                                <p class="h5">
                                    @productInCart.Item.name
                                </p>
                            </a>
                            @{
                                List<string> values = productInCart.Options.Split(';').ToList();
                                foreach (var val in values)
                                {
                                    <p>@val.Replace(":", ": ")</p>
                                }
                            }
                        </td>
                        <td>
                            <p class=""> @String.Format("{0:F2} zł", ((productInCart.Item.price) - ((productInCart.Item.price * productInCart.Item.discount) / 100))) </p>
                        </td>
                        <td class="text-center">
                            @Html.Raw(Html.ActionLink("ToReplace", "AddQuantity", "ShoppingCart", new { id = productInCart.Item.idItem, area = "" }, new { @class = "order-3 order-md-1 m-auto shopping-cart__quantity-button shopping-cart__quantity-button--green" }).ToHtmlString().Replace("ToReplace", "<span class=\"fas fa-plus\"></span>"))
                            <p class="order-2 m-0 font-weight-bold">@productInCart.Quantity</p>
                            @Html.Raw(Html.ActionLink("ToReplace", "DecrementQuantity", "ShoppingCart", new { id = productInCart.Item.idItem, area = "" }, new { @class = "order-1 order-md-3 m-auto shopping-cart__quantity-button shopping-cart__quantity-button--red" }).ToHtmlString().Replace("ToReplace", "<span class=\"fas fa-minus\"></span>"))
                        </td>
                        <td>
                            @String.Format("{0:F2} zł", (productInCart.Quantity * (productInCart.Item.price * ((100.0M - (decimal)productInCart.Item.discount) / 100.0M))))
                        </td>
                        <td class="text-center">
                            @Html.Raw(Html.ActionLink("ToReplace", "Delete", "ShoppingCart", new { id = productInCart.Item.idItem, area = "" }, new { @class = "shopping-cart__trash-button m-auto", @onclick = "return confirm('Na pewno chcesz usunąć ten przedmiot z koszyka?');" }).ToHtmlString().Replace("ToReplace", "<span class=\"fas fa-trash\"></span>"))
                        </td>
                    </tr>
                }
                <tr>
                    <td colspan="3" scope="row" class="font-weight-bold text-size-small">
                        <span>Kod rabatowy</span>
                        @if (User.Identity.IsAuthenticated)
                        {
                            if (Session["code"] == null)
                            {
                                using (Html.BeginForm("DiscountCode", "ShoppingCart", FormMethod.Post))
                                {
                                    @Html.TextBox("discountCode", null, new { @class = "form-control mt-2" })
                                    <input type="submit" value="Skorzystaj" class="btn btn-primary mt-2" />
                                }
                            }
                            else
                            {
                                <p class="h6">Twój kod: @Session["code"]</p>
                            }
                        }
                        else
                        {
                            <p class="h5">Aby skorzystać z kodów, musisz być zalogowany!</p>
                        }
                    </td>
                    <td colspan="3">
                        <div class="row">
                            <p class="col-12 col-md-6 font-weight-bold"> Razem (brutto): </p>
                            <p class="col-12 col-md-6 ">
                                @String.Format("{0:F2} zł", total)
                            </p>
                        </div>
                        <div class="row">
                            <p class="col-12 col-md-6 text-size-small font-weight-bold"> Rabat:  </p>
                            <p class="col-12 col-md-6 text-size-small">
                                @String.Format("{0:F2} zł", promotionCode)
                            </p>
                        </div>

                        <div class="row">
                            <p class="col-12 col-md-6 text-size-small font-weight-bold"> Razem:  </p>
                            <p class="col-12 col-md-6 text-size-small"> @String.Format("{0:F2} zł", total + promotionCode)  </p>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td colspan="3" scope="row">
                        <p class="font-weight-bold text-size-small">Wybierz sposób dostawy:</p>
                        @using (Html.BeginForm("ShippingCosts", "ShoppingCart", FormMethod.Post))
                        {
                            <p class="text-danger">@ViewBag.ErrorShipping</p>
                            foreach (var delivery in shippings)
                            {
                                <label for="@delivery.name"><input type="radio" id="@delivery.name" onchange="form.submit();" name="deliveryCosts" value="@delivery.idShipping" @if (delivery.idShipping == deliveryCost.idShipping) { @String.Format("checked") ; } /> @String.Format("{0} - {1:F2} zł", delivery.name, delivery.cost)</label><br />
                            }
                        }
                    </td>
                    <td colspan="3">
                        <div class="row">
                            <p class="col-6">Produkty: </p>
                            <p class="col-6">@String.Format("{0:F2} zł", total + promotionCode)</p>
                        </div>
                        <div class="row">
                            <p class="col-6">Koszt dostawy: </p>
                            <p class="col-6">@String.Format("{0:F2} zł", deliveryCost.cost)</p>
                        </div>
                        <div class="row">
                            <p class="col-6 font-weight-bold text-size-small">Razem do zapłaty:</p>
                            <p class="col-6 font-weight-bold text-size-small">@String.Format("{0:F2}", total + promotionCode + (deliveryCost.cost))</p>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td colspan="6">
                        @using (Html.BeginForm("Index", "ShoppingCart", null, FormMethod.Post, new { @class = "d-flex flex-column", role = "form" }))
                        {
                            <div class="input-group mt-1 justify-content-end">
                                <button type="submit" id="submit" title="@if(deliveryCost.idShipping == 0) { @String.Format("Musisz wybrać formę dostawy.") }" @if (deliveryCost.idShipping == 0) { @String.Format(" disabled ") } class="btn btn-primary"> Przejdz dalej</button>
                            </div>
                        }
                    </td>
                </tr>
            </tbody>
        </table>
    }
    else
    {
        <h4> Twój koszyk jest pusty! </h4>
        Session["deliveryCost"] = null;
    }
</section>

@section scripts
{
    @Scripts.Render("~/Scripts/Shop/shopping-cart-validation.js");
}