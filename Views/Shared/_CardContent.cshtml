@model bikevision.Models.Item
@using bikevision.Models

@{ 
    string classes = "shopping-card__cart-button btn btn-info";
    string classesResponsive = "btn btn-outline-info col-4 m-0";

    string[] directories = Directory.GetDirectories(Server.MapPath("~/Content/Images/Products/" + Model.idItem + "/"));

    string imgPath = directories[0].Replace(Server.MapPath("~/Content"), "../Content") + "/1.jpg";

    string options = "";

    foreach(var feat in Model.FeatureValueOfItems)
    {
        if(feat.Feature.selectable != null && (bool)feat.Feature.selectable)
        {
            if(!options.Contains(feat.Feature.feature1))
            {
                options += feat.Feature.feature1 + ":" + feat.FeatureValue.FeatureValueOfItems.Where(f => f.Feature.feature1 == feat.Feature.feature1).Select(s => s.FeatureValue.featureValue1).First() + ";";
            }
        }
    }

    if (Model.availability <= 0)
    {
        classes += " disabled";
        classesResponsive += " disabled";
    }

    List<int> favoriteItemsIds = new List<int>();

    if(Session["favoriteItems"] != null)
    {
        favoriteItemsIds = ((List<Item>)(Session["favoriteItems"])).Select(id => id.idItem).ToList();
    }

    List<int> compareItemsIds = new List<int>();

    if(Session["comparation"] != null)
    {
        compareItemsIds = ((List<Item>)(Session["comparation"])).Select(id => id.idItem).ToList();
    }
}

<div class="shopping-card__main-content">
    @if (Model.discount != 0)
    {
        <a href="@Url.Action("Product", "Shop", new { id = Model.idItem, model = imgPath.Replace("../Content\\Images\\Products\\" + Model.idItem + "\\", "").Replace("/1.jpg", "") })" class="shopping-card__banner badge-pill badge-info px-2 py-1">
            Promocja
        </a>
    }

    <a href="@Url.Action("Product", "Shop", new { id = Model.idItem, model = imgPath.Replace("../Content\\Images\\Products\\" + Model.idItem + "\\", "").Replace("/1.jpg", "") })" class="wrapRow">
    <img class="shopping-card__image" runat="server" src="@imgPath" />
    </a>
    <p class="shopping-card__subtitle mb-0 wrapColumn wrapRow h5"> @Html.DisplayFor(modelItem => Model.Category.category1) </p>
    <a href="@Url.Action("Product", "Shop", new { id = Model.idItem, model = imgPath.Replace("../Content\\Images\\Products\\" + Model.idItem + "\\", "").Replace("/1.jpg", "") })" class="wrapColumn wrapRow"><p class="shopping-card__title mb-0 h4">@Html.DisplayFor(modelItem => Model.name)</p></a>
    <hr class="shopping-card__underline wrapColumn wrapRow" />
    <div class="shopping-card__footer wrapColumn wrapRow">
        <h3 class="shopping-card__price">@String.Format("{0:F2} zł", Model.price - ((Model.price * Model.discount) / 100))</h3>

        @if (Model.discount != 0)
        {
            <h5 class="shopping-card__discount">@String.Format("{0:F2} zł", Model.price)</h5>
        }
    </div>
</div>
<div class="d-none d-lg-block shopping-card__hidden-content">
    @Html.Raw(Html.ActionLink("ToReplace", "OrderNow", "ShoppingCart", new { id = Model.idItem, option = options, quantity = 1, area = "" }, new { @class = classes }).ToHtmlString().Replace("ToReplace", "<span class=\"fas fa-shopping-cart small-icon\"></span><span class=\"small-icon\"> Do koszyka </span>"))
    <div class="shopping-card__additional-buttons">
        @if (favoriteItemsIds.Count() > 0)
        {
            if (favoriteItemsIds.Contains(Model.idItem))
            {
                @Html.Raw(Html.ActionLink("ToReplace", "DeleteFromFavorites", "Shop", new { idItem = Model.idItem, returnUrl = Request.Url }, new { @class = "shopping-card__additional-button btn btn-primary px-0" }).ToHtmlString().Replace("ToReplace", "<span class=\"fas fa-heart text-size-very-small\"></span><span class=\"text-size-very-small\"> Usuń</span>"))
            }
            else
            {
                @Html.Raw(Html.ActionLink("ToReplace", "AddToFavorites", "Shop", new { itemId = Model.idItem, returnUrl = Request.Url }, new { @class = "shopping-card__additional-button btn btn-outline-primary px-0" }).ToHtmlString().Replace("ToReplace", "<span class=\"fas fa-heart text-size-very-small\"></span><span class=\"text-size-very-small\"> Ulubiony</span>"))
            }
        }
        else
        {
            @Html.Raw(Html.ActionLink("ToReplace", "AddToFavorites", "Shop", new { itemId = Model.idItem, returnUrl = Request.Url }, new { @class = "shopping-card__additional-button btn btn-outline-primary px-0" }).ToHtmlString().Replace("ToReplace", "<span class=\"fas fa-heart text-size-very-small\"></span><span class=\"text-size-very-small\"> Ulubiony</span>"))
        }

        @if (compareItemsIds.Count() > 0)
        {
            if (compareItemsIds.Contains(Model.idItem))
            {
                @Html.Raw(Html.ActionLink("ToReplace", "RemoveFromComparation", "Shop", new { itemId = Model.idItem, returnUrl = Request.Url }, new { @class = "shopping-card__additional-button btn btn-primary px-0" }).ToHtmlString().Replace("ToReplace", "<span class=\"fas fa-retweet text-size-very-small\"></span><span class=\"text-size-very-small\"> Usuń</span>"))
            }
            else
            {
                @Html.Raw(Html.ActionLink("ToReplace", "AddToComparation", "Shop", new { itemId = Model.idItem, returnUrl = Request.Url }, new { @class = "shopping-card__additional-button btn btn-outline-primary px-0" }).ToHtmlString().Replace("ToReplace", "<span class=\"fas fa-retweet text-size-very-small\"></span><span class=\"text-size-very-small\"> Porównaj</span>"))
            }
        }
        else
        {
            @Html.Raw(Html.ActionLink("ToReplace", "AddToComparation", "Shop", new { itemId = Model.idItem, returnUrl = Request.Url }, new { @class = "shopping-card__additional-button btn btn-outline-primary px-0" }).ToHtmlString().Replace("ToReplace", "<span class=\"fas fa-retweet text-size-very-small\"></span><span class=\"text-size-very-small\"> Porównaj</span>"))
        }
    </div>
</div>
<div class="d-block d-lg-none p-0">
    @Html.Raw(Html.ActionLink("ToReplace", "OrderNow", "ShoppingCart", new { id = Model.idItem, quantity = 1, area = "" }, new { @class = classesResponsive }).ToHtmlString().Replace("ToReplace", "<span class=\"fas fa-shopping-cart small-icon\"></span>"))
    @if (favoriteItemsIds.Count() > 0)
    {
        if (favoriteItemsIds.Contains(Model.idItem))
        {
            @Html.Raw(Html.ActionLink("ToReplace", "DeleteFromFavorites", "Shop", new { idItem = Model.idItem, returnUrl = Request.Url }, new { @class = "btn btn-primary col-4 m-0" }).ToHtmlString().Replace("ToReplace", "<span class=\"fas fa-heart text-size-very-small\"></span>"))
        }
        else
        {
            @Html.Raw(Html.ActionLink("ToReplace", "AddToFavorites", "Shop", new { itemId = Model.idItem, returnUrl = Request.Url }, new { @class = "btn btn-outline-primary col-4 m-0" }).ToHtmlString().Replace("ToReplace", "<span class=\"fas fa-heart text-size-very-small\"></span>"))
        }
    }
    else
    {
        @Html.Raw(Html.ActionLink("ToReplace", "AddToFavorites", "Shop", new { itemId = Model.idItem, returnUrl = Request.Url }, new { @class = "btn btn-outline-primary col-4 m-0" }).ToHtmlString().Replace("ToReplace", "<span class=\"fas fa-heart text-size-very-small\"></span>"))
    }

    @if (compareItemsIds.Count() > 0)
    {
        if (compareItemsIds.Contains(Model.idItem))
        {
            @Html.Raw(Html.ActionLink("ToReplace", "RemoveFromComparation", "Shop", new { itemId = Model.idItem, returnUrl = Request.Url }, new { @class = "btn btn-primary col-4 m-0" }).ToHtmlString().Replace("ToReplace", "<span class=\"fas fa-retweet text-size-very-small\"></span>"))
        }
        else
        {
            @Html.Raw(Html.ActionLink("ToReplace", "AddToComparation", "Shop", new { itemId = Model.idItem, returnUrl = Request.Url }, new { @class = "btn btn-outline-primary col-4 m-0" }).ToHtmlString().Replace("ToReplace", "<span class=\"fas fa-retweet text-size-very-small\"></span>"))
        }
    }
    else
    {
        @Html.Raw(Html.ActionLink("ToReplace", "AddToComparation", "Shop", new { itemId = Model.idItem, returnUrl = Request.Url }, new { @class = "btn btn-outline-primary col-4 m-0" }).ToHtmlString().Replace("ToReplace", "<span class=\"fas fa-retweet text-size-very-small\"></span>"))
    }
</div>
